{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Register/Register.js","components/SignIn/SignIn.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Register","props","onEmailChange","event","setState","email","target","value","onPasswordChange","password","onNameChange","name","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","loadUser","htmlFor","type","onChange","this","React","Component","SignIn","signInEmail","signInPassword","catch","console","log","Logo","options","max","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","particlesOptions","particles","density","enabled","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","imageurl","count","Object","assign","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf9e3b53.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition= ({imageUrl, box}) => {\r\n   // console.log('check', imageUrl)\r\n    return (\r\n    <div className= 'center ma'>\r\n        <div className= 'absolute mt2'>  \r\n            <img id='inputImage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n            <div className= 'bounding_box' style={{top: box.topRow, right:box.rightCol, bottom:box.bottomRow, left: box.leftCol}}> </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Navigation= ({onRouteChange, isSignedIn}) => {\r\n        if(isSignedIn) {\r\n            return(\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signout')} \r\n                    className='f3 link dim black underline pa3 pointer'> Sign Out</p>\r\n        </nav>); } else {\r\n            return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')}\r\n                    className='f3 link dim black underline pa3 pointer'> Sign In</p>\r\n                    <p onClick={() => onRouteChange('register')}\r\n                    className='f3 link dim black underline pa3 pointer'> Register</p>\r\n        </nav>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Register extends React.Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\nonEmailChange =(event)=> {\r\n        this.setState({email: event.target.value})\r\n    }\r\nonPasswordChange =(event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\nonNameChange =(event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\nonSubmitSignIn=()=> {\r\n    fetch('http://localhost:3000/register', {\r\n        method: 'post', //this is 'get' by default\r\n        headers: {'Content-Type': 'application/json'},\r\n        body:JSON.stringify({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            name: this.state.name\r\n        })\r\n        })\r\n        .then(response=> response.json())\r\n        .then(user => {\r\n        if (user.id) {\r\n            this.props.loadUser(user)\r\n            this.props.onRouteChange('home');\r\n        }\r\n        })\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">   \r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\"> Register </legend>\r\n                <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                type=\"text\" \r\n                name=\"name\"  \r\n                id=\"name\"\r\n                onChange={this.onNameChange}\r\n                />\r\n                </div>\r\n            <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"email\" \r\n        name=\"email-address\" \r\n        id=\"email-address\"\r\n        onChange= {this.onEmailChange}\r\n        />\r\n        </div>\r\n        <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\"\r\n        onChange={this.onPasswordChange}\r\n        />\r\n        </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n    <input onClick= { this.onSubmitSignIn} \r\n    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n    type=\"submit\" \r\n    value=\"Register\"/>\r\n    </div>\r\n</div>\r\n</main>\r\n</article>\r\n        );\r\n    }  \r\n}\r\n//home \r\nexport default Register;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange =(event)=> {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n    onPasswordChange =(event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn=()=> {\r\n        fetch('http://localhost:3000/signin', {\r\n        method: 'post', //this is 'get' by default\r\n        headers: {'Content-Type': 'application/json'},\r\n        body:JSON.stringify({\r\n            email: this.state.signInEmail,\r\n            password: this.state.signInPassword\r\n        })\r\n        })\r\n        .then(response=> response.json())\r\n        .then(user => {\r\n        if (user.id) {\r\n            this.props.loadUser(user);\r\n            this.props.onRouteChange('home');\r\n        }\r\n        })\r\n        .catch(console.log)\r\n    }\r\n\r\n    render() {\r\n    const { onRouteChange } = this.props;\r\n        return(\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n        <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input \r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                type=\"email\" \r\n                name=\"email-address\"  \r\n                id=\"email-address\"\r\n                onChange={this.onEmailChange}\r\n                />\r\n    </div>\r\n    <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\"\r\n        onChange={this.onPasswordChange}\r\n        />\r\n    </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n    <input \r\n    onClick= { this.onSubmitSignIn}\r\n    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n    type=\"submit\" \r\n    value=\"Sign in\"/>\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n    <p onClick= {() => onRouteChange('register')} className=\"f6 link dim black db pointer\"> Register</p>\r\n    </div>\r\n</div>\r\n</main>\r\n    </article>\r\n);\r\n    }\r\n}\r\nexport default SignIn;","export default __webpack_public_path__ + \"static/media/brain.b6394610.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo= ()=> {\r\n    return (\r\n    <div className='ma4 mt0'>\r\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner\"> \r\n            <img style={{paddingTop: '5px'}} alt= 'logo' src= {brain}></img>\r\n    </div>\r\n        </Tilt>\r\n    </div>\r\n        );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm=({onInputChange, onButtonSubmit})=> {\r\n    return (\r\n    <div>\r\n    <p className= 'f3'>\r\n    {'This Magic Brain will detect faces in your pictures. You can give it a trial'}\r\n    </p>\r\n        <div className= 'center'> \r\n        <div className= 'form center pa4 br3 shadow-5'>\r\n        <input className='f4 pa2 w-70 center' type='text' onChange= {onInputChange}/>\r\n        <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n        onClick={onButtonSubmit}> Detect</button>\r\n        </div>\r\n    \r\n    </div>\r\n    </div>\r\n        );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank=({name, entries})=> {\r\n    return (\r\n    <div>\r\n        <div className = 'white f3'>\r\n        {`${name}, your current entry count is ${entries}`}\r\n        </div>\r\n        <div className = 'white f3'>\r\n        {entries}\r\n        </div>\r\n    </div>\r\n        );\r\n}\r\n\r\nexport default Rank;","import React, { Component} from 'react';\nimport Particles from 'react-particles-js';\n//import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport SignIn from './components/SignIn/SignIn';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n\n// const Clarifai = require('clarifai');\n// const app = new Clarifai.App({\n// apiKey: 'be52b48c98db41f8929d9dd47e10a291'\n// });\n//const app = new Clarifai.App({apiKey: 'be52b48c98db41f8929d9dd47e10a291'});\n\nconst particlesOptions = {\n        particles: {\n          value:30,\n          density: {\n            enabled:true,\n            value_area: 800\n          }\n              }\n            }\n//to initialize the state for different users\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user:{\n          id: '',\n          name:'',\n          email: ' ',\n          entries: 0,\n          joined: ''\n      }\n    }\n\n\nclass App extends Component {\n  //to get information from Detect button\n  constructor(){\n    super();\n    this.state= initialState;\n  }\n\n  loadUser=(data)=> {\n    this.setState({user:{\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n      }})\n  }\n\n  /*componentDidMount() { //for testing the connection between frontend and backend\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log) \n} */\n\n  calculateFaceLocation= (data)=> {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n  displayFaceBox=(box)=> {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event)=> {\n    this.setState({input: event.target.value}); //to get value from input\n  }\n\n  onButtonSubmit = ()=> {\n    this.setState({imageurl:this.state.input})\n      fetch('http://localhost:3000/imageurl' , {\n          method: 'post', //this is 'get' by default\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify({\n          input: this.state.input\n        }) } )\n      .then(response=> response.json())\n\n    // app.models.predict(\n    // Clarifai.FACE_DETECT_MODEL, \n    // this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image' , {\n          method: 'put', //this is 'get' by default\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify({\n          id: this.state.user.id\n        }) } )\n        .then (response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n        .catch(console.log) //for error handling\n      }\n    this.displayFaceBox(this.calculateFaceLocation(response))}) \n   // do something with response\n  .catch(err=> console.log(err)); // there was an error\n  }\n\n  onRouteChange = (route)=> {\n    if(route === 'signout') { this.setState(initialState)}\n    else if(route==='home') {this.setState({isSignedIn:true})}\n    this.setState({route: route}); //changes route to home when sign in and sign out\n  }\nrender() {\n  return (\n    <div className=\"App\">\n          <Particles className= 'particles' \n          params = {particlesOptions}/>\n        <Navigation isSignedIn= {this.state.isSignedIn} \n        onRouteChange= {this.onRouteChange}  />\n        {this.state.route=== 'home'\n          ? <div>\n          <Logo/> \n          <Rank name= {this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition box ={this.state.box} imageUrl={this.state.input} />\n          </div>\n          : (this.state.route === 'signin' \n          ? <SignIn loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>\n          : <Register loadUser= {this.loadUser} onRouteChange = {this.onRouteChange}/>\n          ) // a function to redirect when signed in\n        }\n    </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \nimport 'clarifai';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}