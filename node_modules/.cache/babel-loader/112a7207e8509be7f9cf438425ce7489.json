{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\callo\\\\OneDrive\\\\Desktop\\\\PROFESSIONAL\\\\Devops_FullStack Internship\\\\Online_learning\\\\week 3\\\\Javascript\\\\React-App-SmartBrain-FrontEnd-Project\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport SignIn from './components/SignIn/SignIn';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank'; // const Clarifai = require('clarifai');\n// const app = new Clarifai.App({\n// apiKey: 'be52b48c98db41f8929d9dd47e10a291'\n// });\n\nconst app = new Clarifai.App({\n  apiKey: 'be52b48c98db41f8929d9dd47e10a291'\n});\nconst particlesOptions = {\n  particles: {\n    value: 30,\n    density: {\n      enabled: true,\n      value_area: 800\n    }\n  }\n};\n\nclass App extends Component {\n  //to get information from Detect button\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.enteries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //to get value from input\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            //this is 'get' by default\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }) // do something with response\n      .catch(err => console.log(err)); // there was an error\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      }); //changes route to home when sign in and sign out\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: ' ',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this) // a function to redirect when signed in\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/callo/OneDrive/Desktop/PROFESSIONAL/Devops_FullStack Internship/Online_learning/week 3/Javascript/React-App-SmartBrain-FrontEnd-Project/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Register","SignIn","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","value","density","enabled","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","enteries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport SignIn from './components/SignIn/SignIn';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n\n// const Clarifai = require('clarifai');\n// const app = new Clarifai.App({\n// apiKey: 'be52b48c98db41f8929d9dd47e10a291'\n// });\nconst app = new Clarifai.App({apiKey: 'be52b48c98db41f8929d9dd47e10a291'});\n\nconst particlesOptions = {\n        particles: {\n          value:30,\n          density: {\n            enabled:true,\n            value_area: 800\n          }\n              }\n            }\n\nclass App extends Component {\n  //to get information from Detect button\n  constructor(){\n    super();\n    this.state= {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user:{\n          id: '',\n          name:'',\n          email: ' ',\n          entries: 0,\n          joined: ''\n      }\n    }\n  }\n\n  loadUser=(data)=> {\n    this.setState({user:{\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.enteries,\n          joined: data.joined\n      }})\n  }\n\n  /*componentDidMount() { //for testing the connection between frontend and backend\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log) \n} */\n\n  calculateFaceLocation= (data)=> {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n  displayFaceBox=(box)=> {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event)=> {\n    this.setState({input: event.target.value}); //to get value from input\n  }\n\n  onButtonSubmit = ()=> {\n    this.setState({imageUrl:this.state.input}) \n    app.models.predict(\n    Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image' , {\n          method: 'put', //this is 'get' by default\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify({\n          id: this.state.user.id\n        }) } )\n        .then (response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n      }\n    this.displayFaceBox(this.calculateFaceLocation(response))}) \n   // do something with response\n  .catch(err=> console.log(err)); // there was an error\n  }\n\n  onRouteChange = (route)=> {\n    if(route === 'signout') { this.setState({isSignedIn:false})}\n    else if(route==='home') {this.setState({isSignedIn:true})}\n    this.setState({route: route}); //changes route to home when sign in and sign out\n  }\nrender() {\n  return (\n    <div className=\"App\">\n          <Particles className= 'particles' \n          params = {particlesOptions}/>\n        <Navigation isSignedIn= {this.state.isSignedIn} \n        onRouteChange= {this.onRouteChange}  />\n        {this.state.route=== 'home'\n          ? <div>\n          <Logo/> \n          <Rank name= {this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition box ={this.state.box} imageUrl={this.state.input} />\n          </div>\n          : (this.state.route === 'signin' \n          ? <SignIn loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>\n          : <Register loadUser= {this.loadUser} onRouteChange = {this.onRouteChange}/>\n          ) // a function to redirect when signed in\n        }\n    </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}